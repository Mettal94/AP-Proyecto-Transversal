/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import AccesoADatos.AlumnoData;
import Entidades.Alumno;
import static Vistas.mainMenu.Escritorio;
import static Vistas.mainMenu.mensaje;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

public class ManejoDeAlumnos extends javax.swing.JInternalFrame {

    private AlumnoData aluD;
    private DefaultTableModel modelo = new DefaultTableModel() {
        public boolean isCellEditable(int f, int c) {
            return false;
        }
    };
    List<Alumno> lista = new ArrayList<>();

    public ManejoDeAlumnos(AlumnoData aluD) {
        this.aluD = aluD;
        initComponents();
        armarCabecera();
        EstadoRB.setSelected(true);
        listar();
        //Con las últimas dos líneas, cuando se abra la ventana, se llenará la tabla con los alumnos activos
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        AlumnosTabla = new javax.swing.JTable();
        SalirB = new javax.swing.JButton();
        ModificarB = new javax.swing.JButton();
        Eliminar = new javax.swing.JButton();
        NuevoB = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        EstadoRB = new javax.swing.JRadioButton();

        setBackground(new java.awt.Color(0, 153, 102));
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Manejo de Alumnos");
        setMaximumSize(new java.awt.Dimension(558, 452));
        setMinimumSize(new java.awt.Dimension(558, 452));
        setPreferredSize(new java.awt.Dimension(558, 452));

        AlumnosTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        AlumnosTabla.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(AlumnosTabla);
        AlumnosTabla.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (AlumnosTabla.getColumnModel().getColumnCount() > 0) {
            AlumnosTabla.getColumnModel().getColumn(0).setResizable(false);
        }

        SalirB.setBackground(new java.awt.Color(0, 153, 102));
        SalirB.setText("Salir");
        SalirB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirBActionPerformed(evt);
            }
        });

        ModificarB.setText("Modificar");
        ModificarB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarBActionPerformed(evt);
            }
        });

        Eliminar.setText("Cambiar Estado");
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });

        NuevoB.setText("Agregar Nuevo Alumno");
        NuevoB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NuevoBActionPerformed(evt);
            }
        });

        jLabel1.setText("Estado");

        EstadoRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EstadoRBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(ModificarB)
                        .addGap(31, 31, 31)
                        .addComponent(Eliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(SalirB)
                        .addGap(25, 25, 25))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EstadoRB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(NuevoB)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(NuevoB))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(EstadoRB, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SalirB)
                    .addComponent(ModificarB)
                    .addComponent(Eliminar))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SalirBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirBActionPerformed
        //Boton para cerrar la ventana
        this.dispose();
    }//GEN-LAST:event_SalirBActionPerformed

    private void EstadoRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EstadoRBActionPerformed
        // Filtrar lista de alumnos
        listar();
    }//GEN-LAST:event_EstadoRBActionPerformed

    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed
        // Botón de eliminar alumno
         try{
            int fila = AlumnosTabla.getSelectedRow();
            int id = (int) AlumnosTabla.getValueAt(fila, 0);
            aluD.eliminarAlumno(id);
            listar();
         }catch(ArrayIndexOutOfBoundsException ex){
             mensaje("Primero debe seleccionar un alumno de la tabla. "+ex.getMessage());
         }
    }//GEN-LAST:event_EliminarActionPerformed

    private void NuevoBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NuevoBActionPerformed
        // Boton para agregar un alumno nuevo
        FormularioAlumnoIF faif = new FormularioAlumnoIF(aluD);
        faif.setVisible(true);
        Escritorio.add(faif);
        Escritorio.moveToFront(faif);
    }//GEN-LAST:event_NuevoBActionPerformed

    private void ModificarBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarBActionPerformed
        //Boton para modificar un alumno
        int seleccion = AlumnosTabla.getSelectedRow();
        if(seleccion < 0){
            mensaje("Debe seleccionar un alumno primero.");
            return;
        }
        int seleccionado = AlumnosTabla.getSelectedRow();
        int id = (int) AlumnosTabla.getValueAt(seleccionado, 0);
        int dni = (int) AlumnosTabla.getValueAt(seleccionado, 1);
        String apellido = (String) AlumnosTabla.getValueAt(seleccionado, 2);
        String nombre = (String) AlumnosTabla.getValueAt(seleccionado, 3);
        LocalDate fechaNac = LocalDate.parse(AlumnosTabla.getValueAt(seleccionado, 4).toString()) ;
        String est = (String) AlumnosTabla.getValueAt(seleccionado, 5);
        Boolean estado;
        if(est.equalsIgnoreCase("Activo")){
            estado = true;
        }else{
            estado = false;
        }
        Alumno alumno = new Alumno(id,dni,apellido,nombre,fechaNac,estado);
        
        ModificarAlumnoIF edicion = new ModificarAlumnoIF(alumno);
        edicion.setVisible(true);
        Escritorio.add(edicion);
        Escritorio.moveToFront(edicion);
    }//GEN-LAST:event_ModificarBActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTable AlumnosTabla;
    private javax.swing.JButton Eliminar;
    private javax.swing.JRadioButton EstadoRB;
    private javax.swing.JButton ModificarB;
    private javax.swing.JButton NuevoB;
    private javax.swing.JButton SalirB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
  
    public void listar() {
        //Método para rellenar la tabla
        borrarFilas();
        String est;
        if (EstadoRB.isSelected()) {
            lista = aluD.listarAlumno(1);
            est = "Activo";
        } else {
            lista = aluD.listarAlumno(0);
            est = "Inactivo";
        }
        for (Alumno alumno : lista) {
            modelo.addRow(new Object[]{alumno.getIdAlumno(), alumno.getDni(), alumno.getApellido(),
                                      alumno.getNombre(), alumno.getFechaNacimiento().toString(), est});
        }
    }

    private void borrarFilas() {
        int f = AlumnosTabla.getRowCount() - 1;
        for (; f >= 0; f--) {
            modelo.removeRow(f);
        }
    }

    public void armarCabecera() {
        modelo.addColumn("id");
        modelo.addColumn("DNI");
        modelo.addColumn("Apellido");
        modelo.addColumn("Nombre");
        modelo.addColumn("Fecha de nacimiento");
        modelo.addColumn("Estado");
        AlumnosTabla.setModel(modelo);
    }

}
